#!/bin/bash
########################################################################
#
# author:  Xavier Janssen                                08/03/2011
# purpose: Create and submit IIHE local job 
#
########################################################################

### Usage:

Usage=$( cat <<SETVAR

Usage: subjob --inDir <code_directory> --inList <codefile1>,<codefile2>,...,<codefileN> --exec <exec1>,<exec2>,...,<execN> --outList
<outfile1>,<outfile2>,..,<outfileN> [--sdbdir <SandboxBaseDir>] [--pnfs] [--qname <QueueName>] [--wtime <HH:MM:SS>]

wildcard allowed !

SETVAR
)

### Where are we ? CERN or IIHE

LABO='NULL'
ScratchArea='/scratch'
QueueName='NULL'

if [ `uname -a | grep 'iihe.ac.be' | wc -l` -eq 1 ];then
  LABO=IIHE
  ScratchArea='/scratch'
  QueueName='localgrid@cream01'
elif [ `uname -a | grep 'cern.ch' | wc -l` -eq 1 ];then
    LABO=CERN
    ScratchArea='/tmp/xjanssen'
    QueueName='8nm'
else
    echo "Warning , don't know were you are, correct before starting subjob."
    exit -1 
fi

### Basic config

jobid=NULL
SandboxBaseDir=/localgrid/$USER

### parse arguments
arglistfile=`(mktemp)`
echo $* | awk '{split($0,a,"--"); n=0 ; for (i in a) n++ ; for (i=2; i<=n; i++) print a[i]}' > $arglistfile
test=`(cat $arglistfile | grep "sdbdir")`
if [ ! -z "$test" ] ; then 
  SandboxBaseDir=`(cat $arglistfile | grep "sdbdir"  | awk -F"sdbdir"  '{print $2}' | sed "s: ::g" )`
fi

pnfs=0
test=`(cat $arglistfile | grep "pnfs")`
if [ ! -z "$test" ] ; then 
  pnfs=1
fi

test=`(cat $arglistfile | grep "jobid")`
if [ ! -z "$test" ] ; then
  jobid=`(         cat $arglistfile | grep "jobid"   | awk -F"jobid"   '{print $2}' | sed "s: ::g" )`
fi
InputSandDir=`(  cat $arglistfile | grep "inDir"   | awk -F"inDir"   '{print $2}' )`
InputSandList=`( cat $arglistfile | grep "inList"  | awk -F"inList"  '{print $2}' )`
OutputSandList=`(cat $arglistfile | grep "outList" | awk -F"outList" '{print $2}' )`
Executable=`(    cat $arglistfile | grep "exec"    | awk -F"exec"    '{print $2}' )`
test=`(cat $arglistfile | grep "qname")`
if [ ! -z "$test" ] ; then
  QueueName=`(    cat $arglistfile | grep "qname"    | awk -F"qname"   '{print $2}' )`
fi

if [ "$LABO" == "IIHE" ] ; then
  QSOPT=""
  test=`(cat $arglistfile | grep "wtime")`
  if [ ! -z "$test" ] ; then
    wtime=`(  cat $arglistfile | grep "wtime" | awk -F"wtime"   '{print $2}' )`
    QSOPT="-l walltime=$wtime"
  fi
fi

rm $arglistfile

echo Starting the following process:
echo ----------------------------------
echo 'SandboxBaseDir : ' $SandboxBaseDir
echo 'JOBID:         : ' $jobid
echo 'InputSandDir   : ' $InputSandDir
echo 'InputSandList  : ' $InputSandList
echo 'OutputSandList : ' $OutputSandList
echo 'Executable     : ' $Executable
echo 'IIHE walltime  : ' $wtime

### Create Sandbox directory
if [ "$jobid" == "NULL" ] ; then
  jobid=`(mktemp -p $SandboxBaseDir | awk -F"." '{print $2}')`
fi
SandboxDir=$SandboxBaseDir/Sandbox_$jobid
mkdir $SandboxDir
cd $SandboxDir

### Start job now

if [ -z "$InputSandDir" ]; then
  echo InputSandDir empty
  echo "$Usage" 
  exit
fi
if [ -z "$InputSandList" ]; then
  echo InputSandList empty
  echo "$Usage" 
  exit
fi
if [ -z "$OutputSandList" ]; then
  echo OutputSandList empty
  echo "$Usage" 
  exit
fi
if [ -z "$Executable" ]; then
  echo Executable empty
  echo "$Usage" 
  exit
fi

### Create Sandbox

cd $InputSandDir
InputSandbox=$SandboxDir/InputSandbox.tgz
ListIn=`(echo $InputSandList | sed "s:,: :g")`
tar czf $InputSandbox $ListIn

### Creating qsub file

subfile=$SandboxDir/qsub.sh
ListOut=`(echo $OutputSandList | sed "s:,: :g")`
ListOut=`(echo $ListOut | sed "s:\"::g")`
#Exec=`(echo $Executable | sed "s:,:;:g")`
Exec=$Executable

cp /dev/null $subfile
echo "#!/bin/bash"                           		>> $subfile
if [ `uname -a | grep 'iihe.ac.be' | wc -l` -eq 1 ];then
  echo "cd $ScratchArea"                        		>> $subfile
  echo "mkdir  $ScratchArea/$jobid"              		>> $subfile
  echo "cd $ScratchArea/$jobid"                  		>> $subfile   
fi
echo 'export LD_LIBRARY_PATH=`pwd`:$LD_LIBRARY_PATH'	>> $subfile   
echo "cp $InputSandbox ."                    		>> $subfile
echo "tar xzf InputSandbox.tgz"              		>> $subfile
echo "echo ----------------------- List of File at the begin on grid node: ">> $subfile
echo "ls                    "                           >> $subfile
echo "$Exec"                                 		>> $subfile
echo "echo ----------------------- List of File at the end on grid node: ">> $subfile
echo "ls                    "                		>> $subfile 
if [ $pnfs -eq 0 ];then
  echo "tar czf OutputSandbox.tgz $ListOut"    		>> $subfile
  echo "mv OutputSandbox.tgz $SandboxDir"      		>> $subfile
else
  echo "mkdir -p /pnfs/iihe/cms/store/user/$USER/$SandboxDir"      >> $subfile
  echo "for file in $ListOut;do"      >> $subfile
  echo '  dccp $file '"/pnfs/iihe/cms/store/user/$USER/$SandboxDir/."      >> $subfile
  echo "done"      >> $subfile
  #echo "ln -s /pnfs/iihe/cms/store/user/$USER/$SandboxDir/OutputSandbox.tgz $SandboxDir/OutputSandbox.tgz"      >> $subfile
  #echo "rm -f OutputSandbox.tgz"      >> $subfile
fi
echo "sleep 240" >> $subfile
chmod +x $subfile
### Submit job
echo "JobID           : $jobid"
if [ `uname -a | grep 'iihe.ac.be' | wc -l` -eq 1 ];then
  #echo "qsub $QSOPT -N $jobid -q $QueueName -o $SandboxDir/stdout -e $SandboxDir/stderr $subfile" > .last_command_sent
  qsub $QSOPT -N $jobid -q $QueueName -j oe -o $SandboxDir/stdout $subfile
  echo "Job id                    Name             User            Time Use S Queue"
  echo "------------------------- ---------------- --------------- -------- - -----"
  qstat -u $USER $QueueName | grep $jobid
elif [ `uname -a | grep lxplus | wc -l` -eq 1 ];then
  echo "Setting lxplus environment"
  bsub -J $jobid -q $QueueName -o $SandboxDir/stdout -e $SandboxDir/stderr $subfile 
  bjobs | grep $jobid
else
  echo "Warning , don't know were you are, correct before starting subjob."
fi
